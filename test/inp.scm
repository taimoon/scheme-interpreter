(writeln #t)
(writeln #f)
(writeln #\t)
(writeln #\f)
(writeln "writeln")
(writeln (< 3 4))
(writeln (< 4 3))
(writeln (if (< 3 4) "smaller" "larger"))
(writeln (if (< 4 3) "smaller" "larger"))
(writeln '(+ (* 3 3) (* 4 4)))
(set! x 13)
(writeln x)
(writeln (+ (* 3 3) (* 4 4)))
(writeln ((lambda (x) (* x x)) 3))
((lambda (inp)
  ((lambda (p)
    (writeln (car p))
    (writeln (car (cdr p)))
    (set-car! p 'hakurei)
    (writeln (car p))
    (set-cdr! p (cons 'reimu '()))
    (writeln p)
    '())
   (read inp)))
 (fopen "test/inp.scm" "r"))

((lambda (inp out)
  (write (read inp) out)
  (fclose out))
 (fopen "test/inp.scm" "r")
 (fopen "test/out.scm" "w"))
0