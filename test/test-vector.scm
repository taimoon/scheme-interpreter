(write (make-vector 0))
(newline)

(write (vector? (make-vector 0)))
(newline)

(write (make-vector 3))
(newline)

(write (vector-length (make-vector 3)))
(newline)

(write (vector -1 0 1 #t #f #\t #\f))
(newline)

(write #(-1 0 1 #t #f #\t #\f))
(newline)

(let ((xs (make-vector 3)))
  (vector-set! xs 0 17)
  (vector-set! xs 1 23)
  (vector-set! xs 2 29)
  (write xs)
  (newline)
  (write (vector-length xs))
  (newline)
  (write (vector? xs))
  (newline))

(let ((xs (vector #t #\c "vector")))
  (write xs)
  (newline)
  (write (vector-length xs))
  (newline)
  (write (vector? xs))
  (newline))

(let ((xs (make-vector 3)))
  (vector-set! xs 2 29)
  (write (vector-ref xs 2))
  (newline)
  (write (vector-length xs))
  (newline)
  (write (vector? xs))
  (newline))

(let ((xs (make-vector 3)))
  (vector-set! xs 0 2)
  (vector-set! xs 1 (vector-length xs))
  (vector-set! xs 2 (+ (vector-ref xs 0) (vector-ref xs 1)))
  (write xs)
  (newline)
  (write (vector-length xs))
  (newline)
  (write (vector? xs))
  (newline))
